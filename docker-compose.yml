services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  redis:
    image: redis:alpine
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: stockdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build: ./backend
    depends_on:
      - kafka
      - redis
      - postgres
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stockdb
    networks:
      - app-network
    ports:
      - "3000:3000"
      - "3001:3001"

  frontend:
    build: ./frontend
    depends_on:
      - backend
    networks:
      - app-network
    ports:
      - "4200:80"

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge